server:
 port: 9000
 servlet:
    context-path: /producer

spring:
  ###################以下为Redis增加的配置###########################
  redis:
    #单机配置
    host: localhost
    port: 6379
    timeout: 6000
    database: 1
    ###################以下为redis哨兵增加的配置###########################
    #    sentinel:
    #      nodes: 192.168.43.234:26379,192.168.43.234:26380,192.168.43.234:26381
    #      master: mymaster
    ###################以下为lettuce连接池增加的配置###########################
    lettuce:
      pool:
        max-active:  100 # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 100 # 连接池中的最大空闲连接
        min-idle: 50 # 连接池中的最小空闲连接
        max-wait: 6000 # 连接池最大阻塞等待时间（使用负值表示没有限制
      shutdown-timeout: 10s
  ###################以下为springcache增加的配置###########################
  cache:
    type: redis
    redis:
      cache-null-values: false
      time-to-live: 20s
  rabbitmq:
    addresses: 192.168.0.40:5672
    username: rabbitmq_admin
    password: 123456
    virtual-host: /test
    connection-timeout: 15000ms
    # Producer
    # 消息发送到交换机确认机制,是否确认回调
    publisher-confirm-type: CORRELATED
    # 没有队列接受消息时，返回状态
    publisher-returns: true
    template:
     #消息无法被正常送达的时候被返回给生产者
      mandatory: true
    cache:
      channel:
        size: 50  # channel的缓存数量，默认值为25
      connection:
        mode: CHANNEL #cache-mode，缓存连接模式，默认值为CHANNEL(单个connection连接，连接之后关闭，自动销毁)
  datasource:
    url: jdbc:mysql://localhost:3306/crm?useSSL=false&serverTimezone=UTC&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
    username: root
    password: qwer1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,config
      filter:
        stat:
          log-slow-sql: true
          merge-sql: true
          slow-sql-millis:  4
      connection-properties: druid.stat.mergeSql=false;druid.stat.slowSqlMillis=3000
#      connection-properties: druid.stat.mergeSql=false;druid.stat.slowSqlMillis=3000;config.decrypt=true;config.decrypt.key=${spring.datasource.public-key}
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        profile-enable: true
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: "/druid/*"
        reset-enable: false
        allow: ""
  jpa:
    database: mysql
    open-in-view: true
    hibernate:
      ddl-auto: create-drop
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    show-sql: true
    properties:
      hibernate:
        hbm2ddl.auto: create
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect        
logging:
  level:
    org.springframework: INFO
    org.hibernate: DEBUG
    root: INFO
  pattern: 
    console:  '%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}'
